name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Format
        run: terraform fmt -check
        working-directory: .

      - name: Terraform Init
        run: terraform init
        working-directory: .

      - name: Terraform Validate
        run: terraform validate
        working-directory: .

      - name: Run Unit Tests
        run: terraform test
        working-directory: ./tests/unit
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Integration Tests
        if: github.event_name == 'pull_request'
        run: terraform test
        working-directory: ./tests/integration
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test Examples
        run: |
          for example in examples/*; do
            if [ -d "$example" ]; then
              echo "Testing example: $example"
              terraform init
              terraform validate
              terraform plan
            fi
          done
        working-directory: .

      - name: Update Pull Request
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const testResults = fs.readFileSync('test-results.txt', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## Test Results\n\n\`\`\`\n${testResults}\n\`\`\``
            }); 